memberSearchIndex = [{"p":"com.example.spring_problem","c":"DataServiceImplTest","l":"createDatabase()"},{"p":"com.example.spring_problem.database","c":"Database","l":"Database()","u":"%3Cinit%3E()"},{"p":"com.example.spring_problem.exception","c":"DatabaseExceptionHandler","l":"DatabaseExceptionHandler()","u":"%3Cinit%3E()"},{"p":"com.example.spring_problem.controller","c":"DataControllers","l":"DataControllers(DataServiceImpl)","u":"%3Cinit%3E(com.example.spring_problem.service.DataServiceImpl)"},{"p":"com.example.spring_problem.dao","c":"DataDAOImpl","l":"DataDAOImpl(Database)","u":"%3Cinit%3E(com.example.spring_problem.database.Database)"},{"p":"com.example.spring_problem.entity","c":"DataObject","l":"DataObject()","u":"%3Cinit%3E()"},{"p":"com.example.spring_problem.entity","c":"DataObject","l":"DataObject(int, String, long)","u":"%3Cinit%3E(int,java.lang.String,long)"},{"p":"com.example.spring_problem.service","c":"DataServiceImpl","l":"DataServiceImpl(DataDAO)","u":"%3Cinit%3E(com.example.spring_problem.dao.DataDAO)"},{"p":"com.example.spring_problem","c":"DataServiceImplTest","l":"DataServiceImplTest()","u":"%3Cinit%3E()"},{"p":"com.example.spring_problem.dao","c":"DataDAO","l":"dump()"},{"p":"com.example.spring_problem.dao","c":"DataDAOImpl","l":"dump()"},{"p":"com.example.spring_problem.database","c":"Database","l":"dump()"},{"p":"com.example.spring_problem.service","c":"DataService","l":"dump()"},{"p":"com.example.spring_problem.service","c":"DataServiceImpl","l":"dump()"},{"p":"com.example.spring_problem","c":"DataServiceImplTest","l":"dumpAndLoadShouldDeleteNewData()"},{"p":"com.example.spring_problem","c":"DataServiceImplTest","l":"dumpAndLoadShouldKeepDatabase()"},{"p":"com.example.spring_problem.controller","c":"DataControllers","l":"dumpFile()"},{"p":"com.example.spring_problem","c":"DataServiceImplTest","l":"dumpShouldReturnFile()"},{"p":"com.example.spring_problem.database","c":"Database.Key","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.example.spring_problem.dao","c":"DataDAO","l":"get(int)"},{"p":"com.example.spring_problem.dao","c":"DataDAOImpl","l":"get(int)"},{"p":"com.example.spring_problem.database","c":"Database","l":"get(int)"},{"p":"com.example.spring_problem.service","c":"DataService","l":"get(int)"},{"p":"com.example.spring_problem.service","c":"DataServiceImpl","l":"get(int)"},{"p":"com.example.spring_problem.entity","c":"DataObject","l":"getData()"},{"p":"com.example.spring_problem.controller","c":"DataControllers","l":"getData(int)"},{"p":"com.example.spring_problem","c":"DataServiceImplTest","l":"getDataByKeyShouldReturnCorrectData()"},{"p":"com.example.spring_problem","c":"DataServiceImplTest","l":"getDataByKeyShouldReturnData()"},{"p":"com.example.spring_problem.database","c":"Database.Key","l":"getKey()"},{"p":"com.example.spring_problem.entity","c":"DataObject","l":"getKey()"},{"p":"com.example.spring_problem.exception","c":"ReturnEMessage","l":"getMessage()"},{"p":"com.example.spring_problem","c":"DataServiceImplTest","l":"getMissedKeyShouldThrowException()"},{"p":"com.example.spring_problem.database","c":"Database.Key","l":"getTtl()"},{"p":"com.example.spring_problem.entity","c":"DataObject","l":"getTtl()"},{"p":"com.example.spring_problem.exception","c":"DatabaseExceptionHandler","l":"handleDataException(MissedDataException)","u":"handleDataException(com.example.spring_problem.exception.MissedDataException)"},{"p":"com.example.spring_problem.exception","c":"DatabaseExceptionHandler","l":"handleDataException(TimeToLeaveException)","u":"handleDataException(com.example.spring_problem.exception.TimeToLeaveException)"},{"p":"com.example.spring_problem.database","c":"Database.Key","l":"hashCode()"},{"p":"com.example.spring_problem.database","c":"Database.Key","l":"isAlive(long)"},{"p":"com.example.spring_problem.database","c":"Database.Key","l":"Key(int)","u":"%3Cinit%3E(int)"},{"p":"com.example.spring_problem.database","c":"Database.Key","l":"Key(int, long)","u":"%3Cinit%3E(int,long)"},{"p":"com.example.spring_problem.database","c":"Database","l":"load(ConcurrentHashMap<Database.Key, String>)","u":"load(java.util.concurrent.ConcurrentHashMap)"},{"p":"com.example.spring_problem.dao","c":"DataDAO","l":"load(InputStream)","u":"load(java.io.InputStream)"},{"p":"com.example.spring_problem.dao","c":"DataDAOImpl","l":"load(InputStream)","u":"load(java.io.InputStream)"},{"p":"com.example.spring_problem.service","c":"DataService","l":"load(InputStream)","u":"load(java.io.InputStream)"},{"p":"com.example.spring_problem.service","c":"DataServiceImpl","l":"load(InputStream)","u":"load(java.io.InputStream)"},{"p":"com.example.spring_problem.controller","c":"DataControllers","l":"loadFile(MultipartFile)","u":"loadFile(org.springframework.web.multipart.MultipartFile)"},{"p":"com.example.spring_problem","c":"DataServiceImplTest","l":"loadFileShouldLoadNormally()"},{"p":"com.example.spring_problem","c":"SpringProblemApplication","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"com.example.spring_problem.exception","c":"MissedDataException","l":"MissedDataException()","u":"%3Cinit%3E()"},{"p":"com.example.spring_problem.database","c":"Database.Key","l":"prepareKeyForDump(Database.Key)","u":"prepareKeyForDump(com.example.spring_problem.database.Database.Key)"},{"p":"com.example.spring_problem.dao","c":"DataDAO","l":"put(int, String)","u":"put(int,java.lang.String)"},{"p":"com.example.spring_problem.dao","c":"DataDAOImpl","l":"put(int, String)","u":"put(int,java.lang.String)"},{"p":"com.example.spring_problem.database","c":"Database","l":"put(int, String)","u":"put(int,java.lang.String)"},{"p":"com.example.spring_problem.service","c":"DataService","l":"put(int, String)","u":"put(int,java.lang.String)"},{"p":"com.example.spring_problem.service","c":"DataServiceImpl","l":"put(int, String)","u":"put(int,java.lang.String)"},{"p":"com.example.spring_problem.dao","c":"DataDAO","l":"put(int, String, long)","u":"put(int,java.lang.String,long)"},{"p":"com.example.spring_problem.dao","c":"DataDAOImpl","l":"put(int, String, long)","u":"put(int,java.lang.String,long)"},{"p":"com.example.spring_problem.database","c":"Database","l":"put(int, String, long)","u":"put(int,java.lang.String,long)"},{"p":"com.example.spring_problem.service","c":"DataService","l":"put(int, String, long)","u":"put(int,java.lang.String,long)"},{"p":"com.example.spring_problem.service","c":"DataServiceImpl","l":"put(int, String, long)","u":"put(int,java.lang.String,long)"},{"p":"com.example.spring_problem.dao","c":"DataDAO","l":"remove(int)"},{"p":"com.example.spring_problem.dao","c":"DataDAOImpl","l":"remove(int)"},{"p":"com.example.spring_problem.database","c":"Database","l":"remove(int)"},{"p":"com.example.spring_problem.service","c":"DataService","l":"remove(int)"},{"p":"com.example.spring_problem.service","c":"DataServiceImpl","l":"remove(int)"},{"p":"com.example.spring_problem.controller","c":"DataControllers","l":"removeData(int)"},{"p":"com.example.spring_problem","c":"DataServiceImplTest","l":"removeDataShouldReturnData()"},{"p":"com.example.spring_problem","c":"DataServiceImplTest","l":"removeKeyTwiceShouldThrowException()"},{"p":"com.example.spring_problem","c":"DataServiceImplTest","l":"removeMissedKeyShouldThrowException()"},{"p":"com.example.spring_problem.exception","c":"ReturnEMessage","l":"ReturnEMessage()","u":"%3Cinit%3E()"},{"p":"com.example.spring_problem.controller","c":"DataControllers","l":"setData(Integer, Long, DataObject)","u":"setData(java.lang.Integer,java.lang.Long,com.example.spring_problem.entity.DataObject)"},{"p":"com.example.spring_problem.entity","c":"DataObject","l":"setData(String)","u":"setData(java.lang.String)"},{"p":"com.example.spring_problem","c":"DataServiceImplTest","l":"setDataAndTtlShouldWorkCorrectly()"},{"p":"com.example.spring_problem","c":"DataServiceImplTest","l":"setDataShouldBeDeletedAfterTtl()"},{"p":"com.example.spring_problem","c":"DataServiceImplTest","l":"setDataShouldWorkCorrectly()"},{"p":"com.example.spring_problem","c":"DataServiceImplTest","l":"setDataTwiceShouldUpdateTtl()"},{"p":"com.example.spring_problem","c":"DataServiceImplTest","l":"setDataWithSameKeyShouldReplaceEachOther()"},{"p":"com.example.spring_problem.database","c":"Database.Key","l":"setDefaultTtl()"},{"p":"com.example.spring_problem.entity","c":"DataObject","l":"setKey(int)"},{"p":"com.example.spring_problem.exception","c":"ReturnEMessage","l":"setMessage(String)","u":"setMessage(java.lang.String)"},{"p":"com.example.spring_problem.database","c":"Database.Key","l":"setTtl(long)"},{"p":"com.example.spring_problem.entity","c":"DataObject","l":"setTtl(long)"},{"p":"com.example.spring_problem","c":"SpringProblemApplication","l":"SpringProblemApplication()","u":"%3Cinit%3E()"},{"p":"com.example.spring_problem.exception","c":"TimeToLeaveException","l":"TimeToLeaveException()","u":"%3Cinit%3E()"},{"p":"com.example.spring_problem.entity","c":"DataObject","l":"toString()"},{"p":"com.example.spring_problem.database","c":"Database","l":"update()"}];updateSearchResults();